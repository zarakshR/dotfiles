#
# ~/.bashrc
#

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

. /usr/local/etc/.bash_aliases
. /usr/share/git/completion/git-completion.bash
. /usr/share/git/completion/git-prompt.sh

GIT_PS1_SHOWDIRTYSTATE=1 #This shows dirty/clean status on the git prompt

alias code='cd /home/zaraksh/Documents/Code'
alias docs='cd /home/zaraksh/Documents'
alias svim='sudoedit'
alias open='xdg-open'
alias fulls='ls -lh --color=auto -a --group-directories-first'
alias pyvi='ipython --TerminalInteractiveShell.editing_mode=vi'
alias hosts='cat /etc/hosts | grep "#\s*0.0.0.0"'


tmp() {
	rand=$RANDOM
    dirname=tmp-$rand
	mkdir /tmp/$dirname
	ln -s /tmp/$dirname
    cd ./$dirname
}

clrtmp() {
    rm $HOME/tmp-*
}

shortps1() {
    PS1="[\W]_$ "
}

longps1() {
    PS1='[\u@\h \w]$(__git_ps1 " ï„¦ (%s)")$ '
}

colors() {
    (x=`tput op` y=`printf %76s`;for i in {0..256};do o=00$i;echo -e ${o:${#o}-3:3} `tput setaf $i;tput setab $i`${y// /=}$x;done)
}

pages() {
    if [ $1 == $4 ]; then
        echo "WARNING: Input filename and output filename are the same. Replacing original file. Continue? [y/n]"
        read choice
        if [ $choice == 'y' ]; then
            qpdf $1 --pages $1 $2-$3 -- --replace-input
        fi
    else
        qpdf $1 --pages $1 $2-$3 -- $4
    fi
}

longps1
# This allows gpg signing for git
export GPG_TTY=$(tty)
